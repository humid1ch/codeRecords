C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Users\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Utils;.\Apps) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "util.h"
   3          #include "ds1302.h"
   4          #include "ds18b20.h"
   5          #include "lcd1602.h"
   6          #include "beep.h"
   7          #include "skey.h"
   8          
   9          // DS1302 日期时间数据存放数组
  10          extern u8 gDS1302_Time[7];
  11          
  12          // 用于记录确认闹钟设定时的时间
  13          u8 alarmSet = 0;
  14          u8 alarmHour = 0;
  15          u8 alarmMinite = 0;
  16          u8 alarmSecond = 0;
  17          
  18          u8 setHour = 0;   // 用于小时设置, 最大23
  19          u8 setMinite = 0; // 用于分钟设置, 最大59
  20          u8 setSecond = 0; // 用于秒设置, 最大59
  21          u8 setYear = 20;  // 用于年设置, 初始为20, 最大99
  22          u8 setMonth = 1;  // 用于月设置, 最大为12
  23          u8 setDay = 1;    // 用于日设置, 最大为31
  24          u8 setWeek = 1;   // 用于周几设置, 最大为7
  25          
  26          // 字符串清空
  27          void stringClear(char* str, u8 sizes);
  28          // 字符串填充
  29          void stringFill(char* str1, const char* str2);
  30          
  31          // 日期时间 初始设置询问(开机询问)
  32          void DefaultDate_Set_Ask();
  33          // 日期时间 修改设置询问
  34          void Date_Set_Ask();
  35          // 初始时间设置
  36          void Date_Set();
  37          
  38          // 闹钟结束判断
  39          void Alarm_Beep();
  40          // 闹钟设置
  41          void Alarm_Set();
  42          // 闹钟 设置询问
  43          void Alarm_Set_Ask();
  44          
  45          // 温度计算
  46          void Temp_Calculate(u16* u16data, float* temperature, u8* negFlag);
  47          // 时间显示
  48          void LCD1602_Time_Display();
  49          // 温度显示
  50          void LCD1602_Temp_Display(float temp, u8 neg);
  51          
  52          void main() {
  53   1          u16 u16tempData = 0; // 接收 ds18b20 获取的值
  54   1          u8 negFlag = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 2   

  55   1          float temperature = 0.0;
  56   1      
  57   1          BEEP_Init();           // 蜂鸣器初始化
  58   1          LCD1602_Init();        // LCD1602初始化
  59   1          SKEY_Init();           // 独立按键初始化
  60   1          DefaultDate_Set_Ask(); // 询问是否需要设置初始时间
  61   1          DS1302_Init();         // DS1302 时钟初始化
  62   1          DS18B20_Init();        // DS18B20 温度传感器初始化
  63   1      
  64   1          while (1) {
  65   2              DS1302_GetTime();       // DS1302 读取日期时间信息
  66   2              LCD1602_Time_Display(); // 显示日期时间信息
  67   2              Alarm_Beep();           // 判断闹钟是否响
  68   2              delayNMs(20);
  69   2      
  70   2              DS18B20_ReadTemperature(&u16tempData);                // 读取 16位温度量
  71   2              Temp_Calculate(&u16tempData, &temperature, &negFlag); // 计算具体温度
  72   2              LCD1602_Temp_Display(temperature, negFlag);           // 显示温度
  73   2              negFlag = 0;
  74   2      
  75   2              // 按键扫描, 判断K4是否被按下, 并询问是否进行 闹钟 和 日期时间的设置
  76   2              if (SKEY_Scan() == SKEY4_PRESSED) {
  77   3                  Date_Set_Ask();
  78   3                  LCD1602_Clear();
  79   3                  Alarm_Set_Ask();
  80   3              }
  81   2          }
  82   1      }
  83          
  84          // 本闹钟思路, 不采用定时器, 而是 与DS1302读取数据做对比
  85          // 采用定时器也可以, 可以将定时的时间均转换为秒, 设定定时器时间
  86          void Alarm_Set() {
  87   1          u8 keyRes = 0;         // 记录按键扫描返回值
  88   1          u8 confirmFlag = 0;    // 记录确认
  89   1          u8 alarmSecondCnt = 0; // 用于闹钟秒计时, 最大59
  90   1          u8 alarmMiniteCnt = 0; // 用于闹钟分钟计时, 最大59
  91   1          u8 alarmHourCnt = 0;   // 用于闹钟小时计时, 最大23
  92   1          char alarmSetStr[16] = {0};
  93   1          char setTips[17] = "K1:OK K2:+ K3:-";
  94   1      
  95   1          u8 i = 0;
  96   1          // i: 0秒 1分 2时
  97   1          for (i = 0; i < 3; i++) {
  98   2              while (!confirmFlag) {
  99   3                  if (i == 0) {
 100   4                      // 秒
 101   4                      stringFill(alarmSetStr, "Second ");
 102   4                      alarmSetStr[7] = alarmSecondCnt / 10 + '0';
 103   4                      alarmSetStr[8] = alarmSecondCnt % 10 + '0';
 104   4                  }
 105   3                  else if (i == 1) {
 106   4                      // 分
 107   4                      stringFill(alarmSetStr, "Minite ");
 108   4                      alarmSetStr[7] = alarmMiniteCnt / 10 + '0';
 109   4                      alarmSetStr[8] = alarmMiniteCnt % 10 + '0';
 110   4                  }
 111   3                  else {
 112   4                      // 时
 113   4                      stringFill(alarmSetStr, "Hour ");
 114   4                      alarmSetStr[5] = alarmHourCnt / 10 + '0';
 115   4                      alarmSetStr[6] = alarmHourCnt % 10 + '0';
 116   4                  }
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 3   

 117   3                  LCD1602_FirstLine(alarmSetStr);
 118   3                  LCD1602_SecondLine(setTips);
 119   3      
 120   3                  keyRes = SKEY_Scan();
 121   3                  switch (keyRes) {
 122   4                  case SKEY1_PRESSED:
 123   4                      confirmFlag = 1;
 124   4                      break;
 125   4      
 126   4                  case SKEY2_PRESSED:
 127   4                      if (i == 0)
 128   4                          alarmSecondCnt++;
 129   4                      else if (i == 1)
 130   4                          alarmMiniteCnt++;
 131   4                      else
 132   4                          alarmHourCnt++;
 133   4                      break;
 134   4      
 135   4                  case SKEY3_PRESSED:
 136   4                      if (i == 0)
 137   4                          alarmSecondCnt--;
 138   4                      else if (i == 1)
 139   4                          alarmMiniteCnt--;
 140   4                      else
 141   4                          alarmHourCnt--;
 142   4                      break;
 143   4                  }
 144   3              }
 145   2              stringClear(alarmSetStr, 9);
 146   2              LCD1602_Clear();
 147   2              confirmFlag = 0;
 148   2          }
 149   1      
 150   1          // 已设置闹钟
 151   1          alarmSet = 1;
 152   1      
 153   1          // 提示闹钟设置完成
 154   1          DS1302_GetTime(); // 获取当前时间
 155   1          alarmHour = (gDS1302_Time[2] >> 4) * 10 + (gDS1302_Time[2] & 0x0F);
 156   1          alarmMinite = (gDS1302_Time[1] >> 4) * 10 + (gDS1302_Time[1] & 0x0F);
 157   1          alarmSecond = (gDS1302_Time[0] >> 4) * 10 + (gDS1302_Time[0] & 0x0F);
 158   1      
 159   1          // 提示设置完成
 160   1          // Alarm: xx:xx:xx
 161   1          stringFill(alarmSetStr, "Alarm: ");
 162   1          alarmSetStr[7] = alarmHourCnt / 10 + '0';
 163   1          alarmSetStr[8] = alarmHourCnt % 10 + '0';
 164   1          alarmSetStr[9] = ':';
 165   1          alarmSetStr[10] = alarmMiniteCnt / 10 + '0';
 166   1          alarmSetStr[11] = alarmMiniteCnt % 10 + '0';
 167   1          alarmSetStr[12] = ':';
 168   1          alarmSetStr[13] = alarmSecondCnt / 10 + '0';
 169   1          alarmSetStr[14] = alarmSecondCnt % 10 + '0';
 170   1      
 171   1          // 提示闹钟开始时间
 172   1          // Start: xx:xx:xx
 173   1          stringFill(setTips, "Start: ");
 174   1          setTips[7] = alarmHour / 10 + '0';
 175   1          setTips[8] = alarmHour % 10 + '0';
 176   1          setTips[9] = ':';
 177   1          setTips[10] = alarmMinite / 10 + '0';
 178   1          setTips[11] = alarmMinite % 10 + '0';
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 4   

 179   1          setTips[12] = ':';
 180   1          setTips[13] = alarmSecond / 10 + '0';
 181   1          setTips[14] = alarmSecond % 10 + '0';
 182   1          LCD1602_FirstLine(alarmSetStr);
 183   1          LCD1602_SecondLine(setTips);
 184   1      
 185   1          // 计算闹钟结束时间
 186   1          alarmHour += alarmHourCnt;
 187   1          alarmMinite += alarmMiniteCnt;
 188   1          alarmSecond += alarmSecondCnt;
 189   1      
 190   1          // 进位 修正闹钟结束时间
 191   1          alarmMinite += alarmSecond / 60;
 192   1          alarmSecond %= 60;
 193   1          alarmHour += alarmMinite / 60;
 194   1          alarmMinite %= 60;
 195   1          alarmHour %= 24;
 196   1      
 197   1          // 十进制转BCD, 方便后面与 ds1302获取时间做对比
 198   1          alarmMinite = ((alarmMinite / 10) << 4) + (alarmMinite % 10);
 199   1          alarmHour = ((alarmHour / 10) << 4) + (alarmHour % 10);
 200   1          alarmSecond = ((alarmSecond / 10) << 4) + (alarmSecond % 10);
 201   1      
 202   1          delayNMs(3000);
 203   1          LCD1602_Clear();
 204   1      }
 205          
 206          void Alarm_Set_Ask() {
 207   1          char alarmAskStr[] = "Set Alarm?";
 208   1          char confirmStr[] = "K1: Yes  K2: No";
 209   1          u8 keyRes = 0;
 210   1          LCD1602_Clear();
 211   1          LCD1602_FirstLine(alarmAskStr);
 212   1          LCD1602_SecondLine(confirmStr);
 213   1      
 214   1          while (!keyRes) {
 215   2              keyRes = SKEY_Scan();
 216   2              switch (keyRes) {
 217   3              case SKEY1_PRESSED:
 218   3                  LCD1602_Clear();
 219   3                  Alarm_Set();
 220   3                  break;
 221   3      
 222   3              case SKEY2_PRESSED:
 223   3                  LCD1602_Clear();
 224   3                  break;
 225   3      
 226   3              default:
 227   3                  keyRes = 0;
 228   3                  break;
 229   3              }
 230   2          }
 231   1      }
 232          
 233          // 闹钟判断
 234          void Alarm_Beep() {
 235   1          if (alarmSet && gDS1302_Time[0] == alarmSecond && gDS1302_Time[1] == alarmMinite && gDS1302_Time[2] ==
             - alarmHour) {
 236   2              alarmSet = 0;
 237   2              BEEP_On(2);
 238   2          }
 239   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 5   

 240          
 241          // 时间设置询问
 242          void DefaultDate_Set_Ask() {
 243   1          char setAskStr[] = "Set Default Time";
 244   1          char confirmStr[] = "K1: Yes  K2: No";
 245   1          u8 keyRes = 0;
 246   1          LCD1602_FirstLine(setAskStr);
 247   1          LCD1602_SecondLine(confirmStr);
 248   1      
 249   1          while (!keyRes) {
 250   2              keyRes = SKEY_Scan();
 251   2              switch (keyRes) {
 252   3              case SKEY1_PRESSED:
 253   3                  LCD1602_Clear();
 254   3                  Date_Set();
 255   3                  break;
 256   3      
 257   3              case SKEY2_PRESSED:
 258   3                  LCD1602_Clear();
 259   3                  break;
 260   3      
 261   3              default:
 262   3                  keyRes = 0;
 263   3                  break;
 264   3              }
 265   2          }
 266   1          LCD1602_Clear(); // LCD清屏
 267   1      }
 268          
 269          // 时间设置函数
 270          void Date_Set() {
 271   1          char timeSetStr[10] = {0};
 272   1          char setTips[17] = "K1:OK K2:+ K3:-";
 273   1          u8 confirmFlag = 0; // 记录确认
 274   1          u8 keyRes = 0;      // 记录按键扫描返回值
 275   1      
 276   1          u8 i = 0;
 277   1          // i: 0(年) 1(月) 2(日) 3(周) 4(时) 5(分) 6(秒)
 278   1          for (i = 0; i < 7; i++) {
 279   2              while (!confirmFlag) {
 280   3                  if (i == 0) {
 281   4                      // 年
 282   4                      stringFill(timeSetStr, "Year ");
 283   4                      timeSetStr[5] = setYear / 10 + '0';
 284   4                      timeSetStr[6] = setYear % 10 + '0';
 285   4                  }
 286   3                  else if (i == 1) {
 287   4                      // 月
 288   4                      stringFill(timeSetStr, "Month ");
 289   4                      timeSetStr[6] = setMonth / 10 + '0';
 290   4                      timeSetStr[7] = setMonth % 10 + '0';
 291   4                  }
 292   3                  else if (i == 2) {
 293   4                      // 日
 294   4                      stringFill(timeSetStr, "Day ");
 295   4                      timeSetStr[4] = setDay / 10 + '0';
 296   4                      timeSetStr[5] = setDay % 10 + '0';
 297   4                  }
 298   3                  else if (i == 3) {
 299   4                      // 周
 300   4                      stringFill(timeSetStr, "Week ");
 301   4                      timeSetStr[5] = setWeek / 10 + '0';
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 6   

 302   4                      timeSetStr[6] = setWeek % 10 + '0';
 303   4                  }
 304   3                  else if (i == 4) {
 305   4                      // 时
 306   4                      stringFill(timeSetStr, "Hour ");
 307   4                      timeSetStr[5] = setHour / 10 + '0';
 308   4                      timeSetStr[6] = setHour % 10 + '0';
 309   4                  }
 310   3                  else if (i == 5) {
 311   4                      // 分
 312   4                      stringFill(timeSetStr, "Minite ");
 313   4                      timeSetStr[7] = setMinite / 10 + '0';
 314   4                      timeSetStr[8] = setMinite % 10 + '0';
 315   4                  }
 316   3                  else {
 317   4                      // 秒
 318   4                      stringFill(timeSetStr, "Second ");
 319   4                      timeSetStr[7] = setSecond / 10 + '0';
 320   4                      timeSetStr[8] = setSecond % 10 + '0';
 321   4                  }
 322   3                  // 显示
 323   3                  LCD1602_FirstLine(timeSetStr);
 324   3                  LCD1602_SecondLine(setTips);
 325   3      
 326   3                  // 按键扫描
 327   3                  keyRes = SKEY_Scan();
 328   3                  switch (keyRes) {
 329   4                  case SKEY1_PRESSED:
 330   4                      confirmFlag = 1;
 331   4                      break;
 332   4      
 333   4                  case SKEY2_PRESSED:
 334   4                      if (i == 0) {
 335   5                          if (setYear < 99)
 336   5                              setYear++;
 337   5                      }
 338   4                      else if (i == 1) {
 339   5                          if (setMonth < 12)
 340   5                              setMonth++;
 341   5                      }
 342   4                      else if (i == 2) {
 343   5                          if (setDay < 31)
 344   5                              setDay++;
 345   5                      }
 346   4                      else if (i == 3) {
 347   5                          if (setWeek < 7)
 348   5                              setWeek++;
 349   5                      }
 350   4                      else if (i == 4) {
 351   5                          if (setHour < 23)
 352   5                              setHour++;
 353   5                      }
 354   4                      else if (i == 5) {
 355   5                          if (setMinite < 59)
 356   5                              setMinite++;
 357   5                      }
 358   4                      else {
 359   5                          if (setSecond < 59)
 360   5                              setSecond++;
 361   5                      }
 362   4      
 363   4                      break;
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 7   

 364   4      
 365   4                  case SKEY3_PRESSED:
 366   4                      if (i == 0) {
 367   5                          if (setYear > 20)
 368   5                              setYear--;
 369   5                      }
 370   4                      else if (i == 1) {
 371   5                          if (setMonth > 1)
 372   5                              setMonth--;
 373   5                      }
 374   4                      else if (i == 2) {
 375   5                          if (setDay > 1)
 376   5                              setDay--;
 377   5                      }
 378   4                      else if (i == 3) {
 379   5                          if (setWeek > 1)
 380   5                              setWeek--;
 381   5                      }
 382   4                      else if (i == 4) {
 383   5                          if (setHour > 0)
 384   5                              setHour--;
 385   5                      }
 386   4                      else if (i == 5) {
 387   5                          if (setMinite > 0)
 388   5                              setMinite--;
 389   5                      }
 390   4                      else {
 391   5                          if (setSecond > 0)
 392   5                              setSecond--;
 393   5                      }
 394   4                      break;
 395   4      
 396   4                  default:
 397   4                      break;
 398   4                  }
 399   3              }
 400   2              stringClear(timeSetStr, 9);
 401   2              LCD1602_Clear();
 402   2      
 403   2              confirmFlag = 0;
 404   2          }
 405   1      
 406   1          // ds1302赋初值
 407   1          gDS1302_Time[0] = ((setSecond / 10) << 4) + (setSecond % 10); // 秒
 408   1          gDS1302_Time[1] = ((setMinite / 10) << 4) + (setMinite % 10); // 分
 409   1          gDS1302_Time[2] = ((setHour / 10) << 4) + (setHour % 10);     // 时
 410   1          gDS1302_Time[3] = ((setDay / 10) << 4) + (setDay % 10);       // 日
 411   1          gDS1302_Time[4] = ((setMonth / 10) << 4) + (setMonth % 10);   // 月
 412   1          gDS1302_Time[5] = ((setWeek / 10) << 4) + (setWeek % 10);     // 周
 413   1          gDS1302_Time[6] = ((setYear / 10) << 4) + (setYear % 10);     // 年
 414   1      }
 415          
 416          void Date_Set_Ask() {
 417   1          char dateAskStr[] = "Set Date?";
 418   1          char confirmStr[] = "K1: Yes  K2: No";
 419   1          u8 keyRes = 0;
 420   1          LCD1602_Clear();
 421   1          LCD1602_FirstLine(dateAskStr);
 422   1          LCD1602_SecondLine(confirmStr);
 423   1      
 424   1          while (1) {
 425   2              keyRes = SKEY_Scan();
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 8   

 426   2              if (keyRes == SKEY1_PRESSED) {
 427   3                  LCD1602_Clear();
 428   3                  Date_Set();    // 需要重新校准时间
 429   3                  DS1302_Init(); // 校准之后要重新初始化
 430   3                  break;
 431   3              }
 432   2              else if (keyRes == SKEY2_PRESSED) {
 433   3                  LCD1602_Clear();
 434   3                  break;
 435   3              }
 436   2          }
 437   1      }
 438          
 439          void LCD1602_Time_Display() {
 440   1          u8 strData[13] = {0};
 441   1          u8 strTime[9] = {0};
 442   1          u8 u8data = 0;
 443   1          u8 i = 0;
 444   1      
 445   1          // xx-xx-xx
 446   1          for (i = 0; i < 3; i++) {
 447   2              u8data = (gDS1302_Time[i] >> 4) * 10 + (gDS1302_Time[i] & 0x0F);
 448   2              strTime[(2 - i) * 3] = u8data / 10 + '0';
 449   2              strTime[(2 - i) * 3 + 1] = u8data % 10 + '0';
 450   2          }
 451   1          strTime[2] = ':';
 452   1          strTime[5] = ':';
 453   1          // 0123456789
 454   1          // xx-xx-xx-x
 455   1          // 日
 456   1          u8data = (gDS1302_Time[i] >> 4) * 10 + (gDS1302_Time[i] & 0x0F);
 457   1          strData[8] = u8data / 10 + '0';
 458   1          strData[9] = u8data % 10 + '0';
 459   1          i++;
 460   1          // 月
 461   1          u8data = (gDS1302_Time[i] >> 4) * 10 + (gDS1302_Time[i] & 0x0F);
 462   1          strData[5] = u8data / 10 + '0';
 463   1          strData[6] = u8data % 10 + '0';
 464   1          i++;
 465   1          // 周
 466   1          u8data = (gDS1302_Time[i] >> 4) * 10 + (gDS1302_Time[i] & 0x0F);
 467   1          strData[11] = u8data % 10 + '0';
 468   1          i++;
 469   1          // 年
 470   1          u8data = (gDS1302_Time[i] >> 4) * 10 + (gDS1302_Time[i] & 0x0F);
 471   1          strData[0] = '2';
 472   1          strData[1] = '0';
 473   1          strData[2] = u8data / 10 + '0';
 474   1          strData[3] = u8data % 10 + '0';
 475   1          strData[4] = '-';
 476   1          strData[7] = '-';
 477   1          strData[10] = '-';
 478   1      
 479   1          LCD1602_FirstLine(strData);
 480   1          LCD1602_SecondLine(strTime);
 481   1      }
 482          
 483          // 温度显示函数
 484          void LCD1602_Temp_Display(float temp, u8 neg) {
 485   1          u16 tempInt = (u16)(temp *= 10);
 486   1          u8 mod = 0;
 487   1          // -xx.xC
C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 9   

 488   1          // 124
 489   1          char tempCode[7] = {0};
 490   1          u8 i = 0;
 491   1      
 492   1          char cnt = 2;
 493   1          while (tempInt) {
 494   2              mod = tempInt % 10;
 495   2              tempInt /= 10;
 496   2              tempCode[cnt--] = mod + '0';
 497   2          }
 498   1          // xxx000 -> 0xx0x0
 499   1          tempCode[4] = tempCode[2];
 500   1          tempCode[2] = tempCode[1];
 501   1          tempCode[1] = tempCode[0];
 502   1          // 0xx0x0 加上符号
 503   1          if (neg)
 504   1              tempCode[0] = '-';
 505   1          else
 506   1              tempCode[0] = ' ';
 507   1      
 508   1          tempCode[3] = '.';
 509   1          tempCode[5] = 'C';
 510   1      
 511   1          // 第二行的最后六位
 512   1          for (i = 0; i < 6; i++)
 513   1              LCD1602_Dispaly(0x4A + i, tempCode[i]);
 514   1      }
 515          
 516          void Temp_Calculate(u16* u16data, float* temperature, u8* negFlag) {
 517   1          // 温度负数修正
 518   1          if ((*u16data) & 0xF800) {
 519   2              *u16data = (~(*u16data)) + 1;
 520   2              *negFlag = 1;
 521   2          }
 522   1      
 523   1          *temperature = (*u16data) * 0.0625;
 524   1      }
 525          
 526          void stringClear(char* str, u8 sizes) {
 527   1          u8 i = 0;
 528   1          for (i = 0; i < sizes; i++)
 529   1              str[i] = 0;
 530   1      }
 531          
 532          void stringFill(char* str1, const char* str2) {
 533   1          u8 i = 0;
 534   1          while (*(str2 + i)) {
 535   2              *(str1 + i) = *(str2 + i);
 536   2              i++;
 537   2          }
 538   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2551    ----
   CONSTANT SIZE    =    237    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11     221
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              10/14/2024 16:17:31 PAGE 10  


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.7.0   UART                                                              10/08/2024 09:25:15 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Apps\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Apps;.\Utils) DEBUG OBJECT
                    -EXTEND PRINT(.\Listings\uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "reg52.h"
   2          #include "uart.h"
   3          
   4          u8 uartBuf[UART_RX_BUF_LENTH] = {0}; //串口接收缓冲池，最大30个字节
   5          u16 uartRxStatus = 0;                //串口接收状态标志
   6          
   7          void uartInit(void) {
   8   1          //串口模块寄存器
   9   1          PCON |= 0x80; //使能波特率倍速位SMOD
  10   1          SCON = 0x50;  //8位数据,可变波特率
  11   1      
  12   1          //定时器1相关寄存器
  13   1          TMOD &= 0x0F; //设置定时器模式
  14   1          TMOD |= 0x20; //设置定时器工作方式2，8位自重载
  15   1          TL1 = 0xFA;   //设置定时初始值
  16   1          TH1 = 0xFA;   //设置定时重载值
  17   1          TR1 = 1;      //定时器1开始计时
  18   1      
  19   1          //中断相关寄存器
  20   1          ES = 1; //使能串口1中断
  21   1          EA = 1; //使能中断总开关
  22   1      }
  23          
  24          void uartSendData(u8 u8data) {
  25   1          SBUF = u8data;
  26   1          while (!TI)
  27   1              ;
  28   1          TI = 0;
  29   1      }
  30          
  31          void uartRecvData(void) {
  32   1          u8 u8RecData = 0;
  33   1          u8RecData = SBUF;
  34   1      
  35   1          //接收没有完成
  36   1          if ((uartRxStatus & RECV_N) == 0) {
  37   2              //已经接收到了'\r'
  38   2              if (uartRxStatus & RECV_R) {
  39   3                  if (u8RecData != '\n')
  40   3                      uartRxStatus = 0; //将接收状态清0
  41   3                  else 
  42   3                      uartRxStatus |= RECV_N; //数据接收完成
  43   3              }
  44   2              else {
  45   3                  //还没接收到'\r'
  46   3                  if (u8RecData == '\r')
  47   3                      uartRxStatus |= RECV_R; //表示收到了'\r'
  48   3                  else {
  49   4                      //是有效数据，需要放入用户数组
  50   4                      if ((uartRxStatus & 0x3fff) < UART_RX_BUF_LENTH) {
  51   5                          uartBuf[uartRxStatus & 0x3fff] = u8RecData;
  52   5                          uartRxStatus++;
  53   5                      }
  54   4                      else
C51 COMPILER V9.60.7.0   UART                                                              10/08/2024 09:25:15 PAGE 2   

  55   4                          uartRxStatus = 0;
  56   4                  }
  57   3              }
  58   2          }
  59   1      }
  60          
  61          char putchar(char dat) {
  62   1          uartSendData(dat);
  63   1      
  64   1          return dat;
  65   1      }
  66          
  67          void uart1Isr(void) interrupt 4 {
  68   1          //检测串口1接收中断
  69   1          if (RI) {
  70   2              RI = 0; //清除串口1接收中断请求位
  71   2              uartRecvData();
  72   2          }
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    135    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

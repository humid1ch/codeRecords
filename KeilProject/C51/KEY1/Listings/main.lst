C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 19:43:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          
   4          // 8位数码管引脚
   5          #define SMG P0
   6          
   7          sbit SMG_22 = P2 ^ 2;
   8          sbit SMG_23 = P2 ^ 3;
   9          sbit SMG_24 = P2 ^ 4;
  10          
  11          #define KEY_PORT P1
  12          
  13          #define KEY_UNPRESS 0
  14          #define KEY1_PRESSED 1
  15          #define KEY2_PRESSED 2
  16          #define KEY3_PRESSED 3
  17          #define KEY4_PRESSED 4
  18          #define KEY5_PRESSED 5
  19          #define KEY6_PRESSED 6
  20          #define KEY7_PRESSED 7
  21          #define KEY8_PRESSED 8
  22          #define KEY9_PRESSED 9
  23          #define KEY10_PRESSED 10
  24          #define KEY11_PRESSED 11
  25          #define KEY12_PRESSED 12
  26          #define KEY13_PRESSED 13
  27          #define KEY14_PRESSED 14
  28          #define KEY15_PRESSED 15
  29          #define KEY16_PRESSED 16
  30          
  31          void delayMs() {
  32   1              unsigned char i, j;
  33   1      
  34   1              _nop_();
  35   1              i = 2;
  36   1              j = 199;
  37   1              do {
  38   2                      while (--j)
  39   2                              ;
  40   2              } while (--i);
  41   1      }
  42          
  43          void delayNMs(unsigned int n) {
  44   1              while (--n)
  45   1                      delayMs();
  46   1      }
  47          
  48          unsigned char keyColScanSingle() {
  49   1              unsigned char keyRes = KEY_UNPRESS;
  50   1      
  51   1              // 列 扫描, P13为左手第一列, P17为第一行
  52   1              // 即 P1的八位中, 低四位表示列, 高四位表示行
  53   1              // 目标列 拉低电平, 然后判断目标列是否有回到高电平
  54   1      
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 19:43:10 PAGE 2   

  55   1              // P2 = 0xFF;
  56   1              // delayNMs(1000);
  57   1              // P2 = 0x00;
  58   1              // delayNMs(1000);
  59   1              KEY_PORT = 0xF7;
  60   1              if (KEY_PORT != 0xF7) {
  61   2                      delayNMs(10);
  62   2                      if (KEY_PORT == 0x77) // 1行 1列
  63   2                              keyRes = KEY1_PRESSED;
  64   2                      if (KEY_PORT == 0xB7) // 2行 1列
  65   2                              keyRes = KEY5_PRESSED;
  66   2                      if (KEY_PORT == 0xD7) // 3行 1列
  67   2                              keyRes = KEY9_PRESSED;
  68   2                      if (KEY_PORT == 0xE7) // 4行 1列
  69   2                              keyRes = KEY13_PRESSED;
  70   2      
  71   2                      while (KEY_PORT != 0xF7)
  72   2                              ;
  73   2              }
  74   1      
  75   1              KEY_PORT = 0xFB;
  76   1              if (KEY_PORT != 0xFB) {
  77   2                      delayNMs(10);
  78   2                      if (KEY_PORT == 0x7B) // 1行 2列
  79   2                              keyRes = KEY2_PRESSED;
  80   2                      if (KEY_PORT == 0xBB) // 2行 2列
  81   2                              keyRes = KEY6_PRESSED;
  82   2                      if (KEY_PORT == 0xDB) // 3行 2列
  83   2                              keyRes = KEY10_PRESSED;
  84   2                      if (KEY_PORT == 0xEB) // 4行 2列
  85   2                              keyRes = KEY14_PRESSED;
  86   2      
  87   2                      while (KEY_PORT != 0xFB)
  88   2                              ;
  89   2              }
  90   1      
  91   1              KEY_PORT = 0xFD;
  92   1              if (KEY_PORT != 0xFD) {
  93   2                      delayNMs(10);
  94   2                      if (KEY_PORT == 0x7D) // 1行 3列
  95   2                              keyRes = KEY3_PRESSED;
  96   2                      if (KEY_PORT == 0xBD) // 2行 3列
  97   2                              keyRes = KEY7_PRESSED;
  98   2                      if (KEY_PORT == 0xDD) // 3行 3列
  99   2                              keyRes = KEY11_PRESSED;
 100   2                      if (KEY_PORT == 0xED) // 4行 3列
 101   2                              keyRes = KEY15_PRESSED;
 102   2      
 103   2                      while (KEY_PORT != 0xFD)
 104   2                              ;
 105   2              }
 106   1      
 107   1              KEY_PORT = 0xFE;
 108   1              if (KEY_PORT != 0xFE) {
 109   2                      delayNMs(10);
 110   2                      if (KEY_PORT == 0x7E) // 1行 4列
 111   2                              keyRes = KEY4_PRESSED;
 112   2                      if (KEY_PORT == 0xBE) // 2行 4列
 113   2                              keyRes = KEY8_PRESSED;
 114   2                      if (KEY_PORT == 0xDE) // 3行 4列
 115   2                              keyRes = KEY12_PRESSED;
 116   2                      if (KEY_PORT == 0xEE) // 4行 4列
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 19:43:10 PAGE 3   

 117   2                              keyRes = KEY16_PRESSED;
 118   2      
 119   2                      while (KEY_PORT != 0xFE)
 120   2                              ;
 121   2              }
 122   1      
 123   1              return keyRes;
 124   1      }
 125          
 126          unsigned char smgNum[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x
             -5E, 0x79, 0x71, 0x00};
 127          
 128          void main() {
 129   1              unsigned char keyRes = KEY_UNPRESS;
 130   1              while (1) {
 131   2                      // 选第一个数码管
 132   2                      SMG_22 = 1;
 133   2                      SMG_23 = 1;
 134   2                      SMG_24 = 1;
 135   2      
 136   2                      keyRes = keyColScanSingle();
 137   2                      switch (keyRes) {
 138   3                      case KEY1_PRESSED:
 139   3                              SMG = smgNum[KEY1_PRESSED - 1];
 140   3                              break;
 141   3      
 142   3                      case KEY2_PRESSED:
 143   3                              SMG = smgNum[KEY2_PRESSED - 1];
 144   3                              break;
 145   3      
 146   3                      case KEY3_PRESSED:
 147   3                              SMG = smgNum[KEY3_PRESSED - 1];
 148   3                              break;
 149   3      
 150   3                      case KEY4_PRESSED:
 151   3                              SMG = smgNum[KEY4_PRESSED - 1];
 152   3                              break;
 153   3      
 154   3                      case KEY5_PRESSED:
 155   3                              SMG = smgNum[KEY5_PRESSED - 1];
 156   3                              break;
 157   3      
 158   3                      case KEY6_PRESSED:
 159   3                              SMG = smgNum[KEY6_PRESSED - 1];
 160   3                              break;
 161   3      
 162   3                      case KEY7_PRESSED:
 163   3                              SMG = smgNum[KEY7_PRESSED - 1];
 164   3                              break;
 165   3      
 166   3                      case KEY8_PRESSED:
 167   3                              SMG = smgNum[KEY8_PRESSED - 1];
 168   3                              break;
 169   3      
 170   3                      case KEY9_PRESSED:
 171   3                              SMG = smgNum[KEY9_PRESSED - 1];
 172   3                              break;
 173   3      
 174   3                      case KEY10_PRESSED:
 175   3                              SMG = smgNum[KEY10_PRESSED - 1];
 176   3                              break;
 177   3      
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 19:43:10 PAGE 4   

 178   3                      case KEY11_PRESSED:
 179   3                              SMG = smgNum[KEY11_PRESSED - 1];
 180   3                              break;
 181   3      
 182   3                      case KEY12_PRESSED:
 183   3                              SMG = smgNum[KEY12_PRESSED - 1];
 184   3                              break;
 185   3      
 186   3                      case KEY13_PRESSED:
 187   3                              SMG = smgNum[KEY13_PRESSED - 1];
 188   3                              break;
 189   3      
 190   3                      case KEY14_PRESSED:
 191   3                              SMG = smgNum[KEY14_PRESSED - 1];
 192   3                              break;
 193   3      
 194   3                      case KEY15_PRESSED:
 195   3                              SMG = smgNum[KEY15_PRESSED - 1];
 196   3                              break;
 197   3      
 198   3                      case KEY16_PRESSED:
 199   3                              SMG = smgNum[KEY16_PRESSED - 1];
 200   3                              break;
 201   3      
 202   3                      default:
 203   3                              break;
 204   3                      }
 205   2              }
 206   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

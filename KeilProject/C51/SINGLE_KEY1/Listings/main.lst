C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 11:17:41 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h             "
   3          
   4          // 四个按键, 连接引脚默认为高电平, 按下按键 与地导通, 变为低电平
   5          sbit S_KEY1 = P3 ^ 1;
   6          sbit S_KEY2 = P3 ^ 0;
   7          sbit S_KEY3 = P3 ^ 2;
   8          sbit S_KEY4 = P3 ^ 3;
   9          
  10          sbit LED1 = P2 ^ 0;
  11          sbit LED2 = P2 ^ 1;
  12          sbit LED3 = P2 ^ 2;
  13          sbit LED4 = P2 ^ 3;
  14          
  15          #define NON_KEY_PUSH 0x00
  16          #define S_KEY1_PUSHED 0x08
  17          #define S_KEY2_PUSHED 0x04
  18          #define S_KEY3_PUSHED 0x02
  19          #define S_KEY4_PUSHED 0x01
  20          
  21          typedef void (*smgSelFunc)();
  22          
  23          // 8位数码管引脚
  24          #define SMG P0
  25          
  26          // 3->8译码器的三个引脚
  27          // 板子上 右边数码管的是较小值
  28          sbit SMG_22 = P2 ^ 2;
  29          sbit SMG_23 = P2 ^ 3;
  30          sbit SMG_24 = P2 ^ 4;
  31          
  32          // 8个 1位数码管选择函数
  33          void smg1() {
  34   1              SMG_24 = 1;
  35   1              SMG_23 = 1;
  36   1              SMG_22 = 1;
  37   1      }
  38          void smg2() {
  39   1              SMG_24 = 1;
  40   1              SMG_23 = 1;
  41   1              SMG_22 = 0;
  42   1      }
  43          void smg3() {
  44   1              SMG_24 = 1;
  45   1              SMG_23 = 0;
  46   1              SMG_22 = 1;
  47   1      }
  48          void smg4() {
  49   1              SMG_24 = 1;
  50   1              SMG_23 = 0;
  51   1              SMG_22 = 0;
  52   1      }
  53          void smg5() {
  54   1              SMG_24 = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 11:17:41 PAGE 2   

  55   1              SMG_23 = 1;
  56   1              SMG_22 = 1;
  57   1      }
  58          void smg6() {
  59   1              SMG_24 = 0;
  60   1              SMG_23 = 1;
  61   1              SMG_22 = 0;
  62   1      }
  63          void smg7() {
  64   1              SMG_24 = 0;
  65   1              SMG_23 = 0;
  66   1              SMG_22 = 1;
  67   1      }
  68          void smg8() {
  69   1              SMG_24 = 0;
  70   1              SMG_23 = 0;
  71   1              SMG_22 = 0;
  72   1      }
  73          
  74          // 数码管选择函数 数组
  75          smgSelFunc smgFuncs[] = {smg1, smg2, smg3, smg4, smg5, smg6, smg7, smg8};
  76          
  77          // 板子使用 共阴数码管, 各引脚给高电平点亮边
  78          // a b c d e f g dp  低->高
  79          // dp g f e d c b a
  80          unsigned char smgNum[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x
             -5E, 0x79, 0x71, 0x00};
  81          
  82          void delayMs() {
  83   1              unsigned char i, j;
  84   1      
  85   1              _nop_();
  86   1              i = 2;
  87   1              j = 199;
  88   1              do {
  89   2                      while (--j)
  90   2                              ;
  91   2              } while (--i);
  92   1      }
  93          
  94          void delayNMs(unsigned int n) {
  95   1              while (--n)
  96   1                      delayMs();
  97   1      }
  98          
  99          unsigned char keyScan() {
 100   1              // 用 低四位表示 每个按键是否被按下
 101   1              // 对应位 被按下, 就将对应位设置为1
 102   1              // 低四位中 高位->低位 分别对应S_KEY1 -> S_KEY4
 103   1              unsigned char keyState = 0x00;
 104   1      
 105   1              if (S_KEY1 == 0 || S_KEY2 == 0 || S_KEY3 == 0 || S_KEY4 == 0) {
 106   2                      delayNMs(2); // 消抖, 确认是否被按下
 107   2                      if (S_KEY1 == 0) {
 108   3                              keyState |= S_KEY1_PUSHED;
 109   3                      }
 110   2      
 111   2                      if (S_KEY2 == 0) {
 112   3                              keyState |= S_KEY2_PUSHED;
 113   3                      }
 114   2      
 115   2                      if (S_KEY3 == 0) {
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 11:17:41 PAGE 3   

 116   3                              keyState |= S_KEY3_PUSHED;
 117   3                      }
 118   2      
 119   2                      if (S_KEY4 == 0) {
 120   3                              keyState |= S_KEY4_PUSHED;
 121   3                      }
 122   2              }
 123   1      
 124   1              // 返回keyState
 125   1              return keyState;
 126   1      }
 127          
 128          void keyLED() {
 129   1              LED1 = LED2 = LED3 = LED4 = 1;
 130   1              while (1) {
 131   2                      unsigned char ret = keyScan();
 132   2                      if (ret & S_KEY1_PUSHED) {
 133   3                              LED1 = 0;
 134   3                      }
 135   2                      if (ret & S_KEY2_PUSHED) {
 136   3                              LED2 = 0;
 137   3                      }
 138   2                      if (ret & S_KEY3_PUSHED) {
 139   3                              LED3 = 0;
 140   3                      }
 141   2                      if (ret & S_KEY4_PUSHED) {
 142   3                              LED4 = 0;
 143   3                      }
 144   2      
 145   2                      if (ret == NON_KEY_PUSH) {
 146   3                              LED1 = LED2 = LED3 = LED4 = 1;
 147   3                      }
 148   2              }
 149   1      }
 150          
 151          void keySMG() {
 152   1              SMG = smgNum[0];
 153   1              while (1) {
 154   2                      unsigned char ret = keyScan();
 155   2                      if (ret & S_KEY1_PUSHED) {
 156   3                              smgFuncs[0]();
 157   3                              SMG = smgNum[0];
 158   3                              delayMs();
 159   3                      }
 160   2                      if (ret & S_KEY2_PUSHED) {
 161   3                              smgFuncs[1]();
 162   3                              SMG = smgNum[1];
 163   3                              delayMs();
 164   3                      }
 165   2                      if (ret & S_KEY3_PUSHED) {
 166   3                              smgFuncs[2]();
 167   3                              SMG = smgNum[2];
 168   3                              delayMs();
 169   3                      }
 170   2                      if (ret & S_KEY4_PUSHED) {
 171   3                              smgFuncs[3]();
 172   3                              SMG = smgNum[3];
 173   3                              delayMs();
 174   3                      }
 175   2      
 176   2                      if (ret == NON_KEY_PUSH) {
 177   3                              //delayMs();
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 11:17:41 PAGE 4   

 178   3                              //SMG = smgNum[16];
 179   3                      }
 180   2              }
 181   1      }
 182          
 183          void main() {
 184   1              keySMG();
 185   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    275    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
